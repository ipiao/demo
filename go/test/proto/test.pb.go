// Code generated by protoc-gen-go. DO NOT EDIT.
// source: test.proto

package example_test

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import test2 "test2"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TestReq_Corpus int32

const (
	TestReq_UNIVERSAL TestReq_Corpus = 0
	TestReq_WEB       TestReq_Corpus = 1
	TestReq_IMAGES    TestReq_Corpus = 2
	TestReq_LOCAL     TestReq_Corpus = 3
	TestReq_NEWS      TestReq_Corpus = 4
	TestReq_PRODUCTS  TestReq_Corpus = 5
	TestReq_VIDEO     TestReq_Corpus = 6
)

var TestReq_Corpus_name = map[int32]string{
	0: "UNIVERSAL",
	1: "WEB",
	2: "IMAGES",
	3: "LOCAL",
	4: "NEWS",
	5: "PRODUCTS",
	6: "VIDEO",
}

var TestReq_Corpus_value = map[string]int32{
	"UNIVERSAL": 0,
	"WEB":       1,
	"IMAGES":    2,
	"LOCAL":     3,
	"NEWS":      4,
	"PRODUCTS":  5,
	"VIDEO":     6,
}

func (x TestReq_Corpus) String() string {
	return proto.EnumName(TestReq_Corpus_name, int32(x))
}

func (TestReq_Corpus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c161fcfdc0c3ff1e, []int{0, 0}
}

type TestResp_Corpus int32

const (
	TestResp_UNIVERSAL TestResp_Corpus = 0
	TestResp_WEB       TestResp_Corpus = 1
	TestResp_IMAGES    TestResp_Corpus = 2
	TestResp_LOCAL     TestResp_Corpus = 3
	TestResp_NEWS      TestResp_Corpus = 4
	TestResp_PRODUCTS  TestResp_Corpus = 5
	TestResp_VIDEO     TestResp_Corpus = 6
)

var TestResp_Corpus_name = map[int32]string{
	0: "UNIVERSAL",
	1: "WEB",
	2: "IMAGES",
	3: "LOCAL",
	4: "NEWS",
	5: "PRODUCTS",
	6: "VIDEO",
}

var TestResp_Corpus_value = map[string]int32{
	"UNIVERSAL": 0,
	"WEB":       1,
	"IMAGES":    2,
	"LOCAL":     3,
	"NEWS":      4,
	"PRODUCTS":  5,
	"VIDEO":     6,
}

func (x TestResp_Corpus) String() string {
	return proto.EnumName(TestResp_Corpus_name, int32(x))
}

func (TestResp_Corpus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c161fcfdc0c3ff1e, []int{1, 0}
}

type TestReq struct {
	Id       int64                   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Test2    *test2.Test2            `protobuf:"bytes,2,opt,name=test2,proto3" json:"test2,omitempty"`
	Test2Map map[string]*test2.Test2 `protobuf:"bytes,3,rep,name=test2_map,json=test2Map,proto3" json:"test2_map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Types that are valid to be assigned to Avatar:
	//	*TestReq_ImageUrl
	//	*TestReq_ImageData
	Avatar               isTestReq_Avatar `protobuf_oneof:"avatar"`
	Corpus               TestReq_Corpus   `protobuf:"varint,6,opt,name=corpus,proto3,enum=example.test.TestReq_Corpus" json:"corpus,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TestReq) Reset()         { *m = TestReq{} }
func (m *TestReq) String() string { return proto.CompactTextString(m) }
func (*TestReq) ProtoMessage()    {}
func (*TestReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_c161fcfdc0c3ff1e, []int{0}
}
func (m *TestReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestReq.Unmarshal(m, b)
}
func (m *TestReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestReq.Marshal(b, m, deterministic)
}
func (dst *TestReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestReq.Merge(dst, src)
}
func (m *TestReq) XXX_Size() int {
	return xxx_messageInfo_TestReq.Size(m)
}
func (m *TestReq) XXX_DiscardUnknown() {
	xxx_messageInfo_TestReq.DiscardUnknown(m)
}

var xxx_messageInfo_TestReq proto.InternalMessageInfo

func (m *TestReq) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TestReq) GetTest2() *test2.Test2 {
	if m != nil {
		return m.Test2
	}
	return nil
}

func (m *TestReq) GetTest2Map() map[string]*test2.Test2 {
	if m != nil {
		return m.Test2Map
	}
	return nil
}

type isTestReq_Avatar interface {
	isTestReq_Avatar()
}

type TestReq_ImageUrl struct {
	ImageUrl string `protobuf:"bytes,4,opt,name=image_url,json=imageUrl,proto3,oneof"`
}

type TestReq_ImageData struct {
	ImageData []byte `protobuf:"bytes,5,opt,name=image_data,json=imageData,proto3,oneof"`
}

func (*TestReq_ImageUrl) isTestReq_Avatar() {}

func (*TestReq_ImageData) isTestReq_Avatar() {}

func (m *TestReq) GetAvatar() isTestReq_Avatar {
	if m != nil {
		return m.Avatar
	}
	return nil
}

func (m *TestReq) GetImageUrl() string {
	if x, ok := m.GetAvatar().(*TestReq_ImageUrl); ok {
		return x.ImageUrl
	}
	return ""
}

func (m *TestReq) GetImageData() []byte {
	if x, ok := m.GetAvatar().(*TestReq_ImageData); ok {
		return x.ImageData
	}
	return nil
}

func (m *TestReq) GetCorpus() TestReq_Corpus {
	if m != nil {
		return m.Corpus
	}
	return TestReq_UNIVERSAL
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*TestReq) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _TestReq_OneofMarshaler, _TestReq_OneofUnmarshaler, _TestReq_OneofSizer, []interface{}{
		(*TestReq_ImageUrl)(nil),
		(*TestReq_ImageData)(nil),
	}
}

func _TestReq_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*TestReq)
	// avatar
	switch x := m.Avatar.(type) {
	case *TestReq_ImageUrl:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.ImageUrl)
	case *TestReq_ImageData:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.ImageData)
	case nil:
	default:
		return fmt.Errorf("TestReq.Avatar has unexpected type %T", x)
	}
	return nil
}

func _TestReq_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*TestReq)
	switch tag {
	case 4: // avatar.image_url
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Avatar = &TestReq_ImageUrl{x}
		return true, err
	case 5: // avatar.image_data
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.Avatar = &TestReq_ImageData{x}
		return true, err
	default:
		return false, nil
	}
}

func _TestReq_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*TestReq)
	// avatar
	switch x := m.Avatar.(type) {
	case *TestReq_ImageUrl:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.ImageUrl)))
		n += len(x.ImageUrl)
	case *TestReq_ImageData:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.ImageData)))
		n += len(x.ImageData)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type TestResp struct {
	Id       int64                   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Test2    *test2.Test2            `protobuf:"bytes,2,opt,name=test2,proto3" json:"test2,omitempty"`
	Test2Map map[string]*test2.Test2 `protobuf:"bytes,3,rep,name=test2_map,json=test2Map,proto3" json:"test2_map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Types that are valid to be assigned to Avatar:
	//	*TestResp_ImageUrl
	//	*TestResp_ImageData
	Avatar               isTestResp_Avatar `protobuf_oneof:"avatar"`
	Corpus               TestResp_Corpus   `protobuf:"varint,6,opt,name=corpus,proto3,enum=example.test.TestResp_Corpus" json:"corpus,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TestResp) Reset()         { *m = TestResp{} }
func (m *TestResp) String() string { return proto.CompactTextString(m) }
func (*TestResp) ProtoMessage()    {}
func (*TestResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_c161fcfdc0c3ff1e, []int{1}
}
func (m *TestResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestResp.Unmarshal(m, b)
}
func (m *TestResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestResp.Marshal(b, m, deterministic)
}
func (dst *TestResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestResp.Merge(dst, src)
}
func (m *TestResp) XXX_Size() int {
	return xxx_messageInfo_TestResp.Size(m)
}
func (m *TestResp) XXX_DiscardUnknown() {
	xxx_messageInfo_TestResp.DiscardUnknown(m)
}

var xxx_messageInfo_TestResp proto.InternalMessageInfo

func (m *TestResp) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TestResp) GetTest2() *test2.Test2 {
	if m != nil {
		return m.Test2
	}
	return nil
}

func (m *TestResp) GetTest2Map() map[string]*test2.Test2 {
	if m != nil {
		return m.Test2Map
	}
	return nil
}

type isTestResp_Avatar interface {
	isTestResp_Avatar()
}

type TestResp_ImageUrl struct {
	ImageUrl string `protobuf:"bytes,4,opt,name=image_url,json=imageUrl,proto3,oneof"`
}

type TestResp_ImageData struct {
	ImageData []byte `protobuf:"bytes,5,opt,name=image_data,json=imageData,proto3,oneof"`
}

func (*TestResp_ImageUrl) isTestResp_Avatar() {}

func (*TestResp_ImageData) isTestResp_Avatar() {}

func (m *TestResp) GetAvatar() isTestResp_Avatar {
	if m != nil {
		return m.Avatar
	}
	return nil
}

func (m *TestResp) GetImageUrl() string {
	if x, ok := m.GetAvatar().(*TestResp_ImageUrl); ok {
		return x.ImageUrl
	}
	return ""
}

func (m *TestResp) GetImageData() []byte {
	if x, ok := m.GetAvatar().(*TestResp_ImageData); ok {
		return x.ImageData
	}
	return nil
}

func (m *TestResp) GetCorpus() TestResp_Corpus {
	if m != nil {
		return m.Corpus
	}
	return TestResp_UNIVERSAL
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*TestResp) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _TestResp_OneofMarshaler, _TestResp_OneofUnmarshaler, _TestResp_OneofSizer, []interface{}{
		(*TestResp_ImageUrl)(nil),
		(*TestResp_ImageData)(nil),
	}
}

func _TestResp_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*TestResp)
	// avatar
	switch x := m.Avatar.(type) {
	case *TestResp_ImageUrl:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.ImageUrl)
	case *TestResp_ImageData:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.ImageData)
	case nil:
	default:
		return fmt.Errorf("TestResp.Avatar has unexpected type %T", x)
	}
	return nil
}

func _TestResp_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*TestResp)
	switch tag {
	case 4: // avatar.image_url
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Avatar = &TestResp_ImageUrl{x}
		return true, err
	case 5: // avatar.image_data
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.Avatar = &TestResp_ImageData{x}
		return true, err
	default:
		return false, nil
	}
}

func _TestResp_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*TestResp)
	// avatar
	switch x := m.Avatar.(type) {
	case *TestResp_ImageUrl:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.ImageUrl)))
		n += len(x.ImageUrl)
	case *TestResp_ImageData:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.ImageData)))
		n += len(x.ImageData)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*TestReq)(nil), "example.test.TestReq")
	proto.RegisterMapType((map[string]*test2.Test2)(nil), "example.test.TestReq.Test2MapEntry")
	proto.RegisterType((*TestResp)(nil), "example.test.TestResp")
	proto.RegisterMapType((map[string]*test2.Test2)(nil), "example.test.TestResp.Test2MapEntry")
	proto.RegisterEnum("example.test.TestReq_Corpus", TestReq_Corpus_name, TestReq_Corpus_value)
	proto.RegisterEnum("example.test.TestResp_Corpus", TestResp_Corpus_name, TestResp_Corpus_value)
}

func init() { proto.RegisterFile("test.proto", fileDescriptor_c161fcfdc0c3ff1e) }

var fileDescriptor_c161fcfdc0c3ff1e = []byte{
	// 418 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x93, 0xc1, 0x8f, 0x93, 0x40,
	0x14, 0xc6, 0x3b, 0x4c, 0x61, 0xe1, 0x6d, 0xb7, 0x19, 0x5f, 0xd4, 0x90, 0xc6, 0x8d, 0x04, 0x3d,
	0x10, 0x0f, 0x98, 0xa0, 0x26, 0x1b, 0x4f, 0x4b, 0x5b, 0x62, 0x9b, 0x74, 0xb7, 0x3a, 0x6c, 0x77,
	0x93, 0xbd, 0x6c, 0x46, 0x3b, 0x31, 0x8d, 0x54, 0x10, 0xa6, 0x1b, 0xfb, 0x8f, 0x99, 0xf8, 0xdf,
	0x19, 0x86, 0x1e, 0xac, 0xa2, 0x17, 0xe3, 0x65, 0x2f, 0x93, 0xc7, 0xe3, 0xf7, 0xf8, 0xe0, 0xfb,
	0x78, 0x00, 0x4a, 0x56, 0x2a, 0x2c, 0xca, 0x5c, 0xe5, 0xd8, 0x93, 0x5f, 0xc5, 0xba, 0xc8, 0x64,
	0x58, 0xf7, 0x06, 0xf7, 0xea, 0x33, 0x7a, 0xae, 0xcf, 0x06, 0xf0, 0xbf, 0x51, 0x38, 0xb8, 0x90,
	0x95, 0xe2, 0xf2, 0x0b, 0xf6, 0xc1, 0x58, 0x2d, 0x5d, 0xe2, 0x91, 0x80, 0x72, 0x63, 0xb5, 0xc4,
	0x67, 0x60, 0x6a, 0xd4, 0x35, 0x3c, 0x12, 0x1c, 0x46, 0xf7, 0xc3, 0x9f, 0x1f, 0x16, 0x85, 0xf5,
	0x58, 0xc4, 0x1b, 0x04, 0x4f, 0xc1, 0xd1, 0xc5, 0xcd, 0x5a, 0x14, 0x2e, 0xf5, 0x68, 0x70, 0x18,
	0x3d, 0xd9, 0xe3, 0xc3, 0x9d, 0x4a, 0x33, 0x76, 0x26, 0x8a, 0xe4, 0xb3, 0x2a, 0xb7, 0xdc, 0x56,
	0xbb, 0x4b, 0x3c, 0x06, 0x67, 0xb5, 0x16, 0x1f, 0xe5, 0xcd, 0xa6, 0xcc, 0xdc, 0xae, 0x47, 0x02,
	0x67, 0xd2, 0xe1, 0xb6, 0x6e, 0x2d, 0xca, 0x0c, 0x1f, 0x03, 0x34, 0xb7, 0x97, 0x42, 0x09, 0xd7,
	0xf4, 0x48, 0xd0, 0x9b, 0x74, 0x78, 0x33, 0x32, 0x16, 0x4a, 0xe0, 0x4b, 0xb0, 0x3e, 0xe4, 0x65,
	0xb1, 0xa9, 0x5c, 0xcb, 0x23, 0x41, 0x3f, 0x7a, 0xd4, 0x2e, 0x3f, 0xd2, 0x0c, 0xdf, 0xb1, 0x83,
	0x77, 0x70, 0xb4, 0xf7, 0x42, 0xc8, 0x80, 0x7e, 0x92, 0x5b, 0xed, 0x82, 0xc3, 0xeb, 0xb2, 0xb6,
	0xe1, 0x56, 0x64, 0x1b, 0xf9, 0x77, 0x1b, 0x34, 0xf2, 0xda, 0x38, 0x21, 0xfe, 0x35, 0x58, 0x8d,
	0x08, 0x1e, 0x81, 0xb3, 0x38, 0x9f, 0x5e, 0x26, 0x3c, 0x8d, 0x67, 0xac, 0x83, 0x07, 0x40, 0xaf,
	0x92, 0x21, 0x23, 0x08, 0x60, 0x4d, 0xcf, 0xe2, 0x37, 0x49, 0xca, 0x0c, 0x74, 0xc0, 0x9c, 0xcd,
	0x47, 0xf1, 0x8c, 0x51, 0xb4, 0xa1, 0x7b, 0x9e, 0x5c, 0xa5, 0xac, 0x8b, 0x3d, 0xb0, 0xdf, 0xf2,
	0xf9, 0x78, 0x31, 0xba, 0x48, 0x99, 0x59, 0x23, 0x97, 0xd3, 0x71, 0x32, 0x67, 0xd6, 0xd0, 0x06,
	0x4b, 0xdc, 0x0a, 0x25, 0x4a, 0xff, 0x3b, 0x05, 0xbb, 0xf9, 0xa6, 0xaa, 0xf8, 0xa7, 0xe4, 0xe2,
	0xdf, 0x93, 0x7b, 0xda, 0x66, 0x5d, 0x55, 0xfc, 0xb7, 0xe8, 0x5e, 0xfd, 0x12, 0xdd, 0xf1, 0x1f,
	0xf4, 0xef, 0x48, 0x76, 0xd1, 0x29, 0x74, 0x6b, 0x65, 0x3c, 0x01, 0x73, 0x22, 0xb3, 0x2c, 0xc7,
	0x07, 0xad, 0xff, 0xea, 0xe0, 0x61, 0xbb, 0x0f, 0x7e, 0x67, 0xd8, 0xbf, 0xde, 0xdb, 0xec, 0xf7,
	0x96, 0xde, 0xe6, 0x17, 0x3f, 0x02, 0x00, 0x00, 0xff, 0xff, 0x9f, 0x16, 0x36, 0x03, 0xfc, 0x03,
	0x00, 0x00,
}
